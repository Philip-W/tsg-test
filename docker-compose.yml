version: '2'

services:
  mongo:
   image: mongo
   ports:
     - "27017:27017"

  zookeeper:
   image: wurstmeister/zookeeper
   ports:
     - "2181:2181"

  kafka:
   image: wurstmeister/kafka
   ports:
     - "9092:9092"
   environment:
     #KAFKA_ADVERTISED_HOST_NAME: "kafka" # eg: HOST_IP_ADDR=$(ipconfig getifaddr en0) docker-compose up
     KAFKA_ADVERTISED_HOST_NAME: "localhost"
     KAFKA_ADVERTISED_PORT: "9092"
     KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
     KAFKA_CREATE_TOPICS: "dev.betting:1:1" 
   volumes:
     - /var/run/docker.sock:/var/run/docker.sock
   depends_on:
     - zookeeper

  #rabbitmq:
  #    image: rabbitmq:3-management
  #    ports:
  #      - "15672:15672"
  #      - "5672:5672"
  #    environment:
  #      RABBITMQ_DEFAULT_PASS: "rabbitmq"
  #      RABBITMQ_DEFAULT_USER: "rabbitmq"
  #      RABBITMQ_DEFAULT_VHOST: "/feedme"

  provider:
    image: tsgtechtest/provider:1.0.0
    ports:
      - "8181:8181"
      - "8282:8282"

  # write_to_no_sql:
  #   build: ./writeDataToNoSQL
  #   networks:
  #     - betting
  #   depends_on: 
  #     - kafka
  #     - mongo
  #   environment:
  #     KAFKA_ADDRESS: "zookeeper:2181"
  #     KAFKA_TOPIC: "dev.betting"
  #     MONGO_HOST: "mongodb://mongo"
  #     MONGO_PORT: "27017"
  #     MONGO_TABLE: "docker"

# tcp_consumer:
#   build: ./tcp_consumer
#   depends_on:
#     - kafka
#     - mongo
#     - write_to_no_sql
#   environment:
